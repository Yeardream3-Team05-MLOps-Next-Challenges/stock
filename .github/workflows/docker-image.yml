name: Docker Image CICD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: docker build -t myapp .

    - name: Run Docker container
      run: docker run -d myapp

    - name: action-slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        author_name: GitHub Actions - build
        fields: repo,commit,message,author
        mention: here
        if_mention: failure,cancelled
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: always()

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Copy file to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "."
        target: "~/docker/stock/"

    - name: Deploy to Ubuntu server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd ~/docker/stock
          echo "APP_KEY=${{ secrets.APP_KEY }}" > .env
          echo "APP_SECRET=${{ secrets.APP_SECRET }}" >> .env
          echo "HTS_ID=${{ secrets.HTS_ID }}" >> .env
          echo "SERVER_HOST=${{ secrets.SERVER_HOST }}" >> .env
          docker compose down --rmi all
          docker compose build
          docker compose up -d

    - name: action-slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        author_name: GitHub Actions - deploy
        fields: repo,commit,message,author
        mention: here
        if_mention: failure,cancelled
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: always()

  prefect:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Export PREFECT_API_URL 
      run: echo "PREFECT_API_URL=${{ secrets.PREFECT_SERVER_URL }}" >> $GITHUB_ENV

    - name: Run Prefect Flow Registration Script 
      env:
        PREFECT_API_URL: ${{ secrets.PREFECT_SERVER_URL }}
      run: python register_flow.py

    - name: action-slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        author_name: GitHub Actions - prefect
        fields: repo,commit,message,author
        mention: here
        if_mention: failure,cancelled
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: always()
